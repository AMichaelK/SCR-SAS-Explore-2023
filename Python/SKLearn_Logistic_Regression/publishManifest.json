{
  "creationTimeStamp": "2023-09-13T18:15:23.5858Z",
  "createdBy": "ankanz",
  "modifiedTimeStamp": "2023-09-13T18:15:23.5858Z",
  "modifiedBy": "ankanz",
  "id": "d43e44a0-aa40-4d0c-8ab0-f8435766040d",
  "destinationName": "SCRDemo",
  "destination": {
    "creationTimeStamp": "2023-08-23T18:13:15.924345Z",
    "createdBy": "ankanz",
    "modifiedTimeStamp": "2023-08-24T20:38:13.320454Z",
    "modifiedBy": "ankanz",
    "version": 2,
    "id": "ada9fe3f-54da-4fe2-b589-fadfdf98faf6",
    "name": "SCRDemo",
    "destinationType": "git",
    "properties": [
      {
        "name": "credDomainId",
        "value": "ankanz"
      },
      {
        "name": "remoteRepositoryURL",
        "value": "https://github.com/AMichaelK/SCR-SAS-Explore-2023.git"
      },
      {
        "name": "localRepositoryLocation",
        "value": "/Python"
      },
      {
        "name": "userEmail",
        "value": "amkan18@gmail.com"
      },
      {
        "name": "userName",
        "value": "amichaelk"
      },
      {
        "name": "codeGenerationMode",
        "value": "mas"
      },
      {
        "name": "gitRemotePath",
        "value": "/Python"
      }
    ],
    "links": [
      {
        "method": "GET",
        "rel": "up",
        "href": "/modelPublish/destinations",
        "uri": "/modelPublish/destinations",
        "type": "application/vnd.sas.collection"
      },
      {
        "method": "GET",
        "rel": "self",
        "href": "/modelPublish/destinations/SCRDemo",
        "uri": "/modelPublish/destinations/SCRDemo",
        "type": "application/vnd.sas.models.publishing.destination"
      },
      {
        "method": "DELETE",
        "rel": "delete",
        "href": "/modelPublish/destinations/SCRDemo",
        "uri": "/modelPublish/destinations/SCRDemo"
      },
      {
        "method": "PUT",
        "rel": "update",
        "href": "/modelPublish/destinations/SCRDemo",
        "uri": "/modelPublish/destinations/SCRDemo",
        "type": "application/vnd.sas.models.publishing.destination"
      },
      {
        "method": "GET",
        "rel": "getGitFolders",
        "href": "/modelPublish/destinations/SCRDemo/gitFolders",
        "uri": "/modelPublish/destinations/SCRDemo/gitFolders",
        "type": "application/vnd.sas.collection"
      }
    ]
  },
  "content": {
    "creationTimeStamp": "0001-01-01T00:00:00Z",
    "modifiedTimeStamp": "0001-01-01T00:00:00Z",
    "modelName": "SKLearn_Logistic_Regression",
    "principalID": "e4949fbb-1dfb-43f7-92b3-442f8b968dc7",
    "codeType": "python",
    "code": "data sasep.out;\n   dcl package pymas pm;\n   dcl package logger logr('App.MM.Python.DS2');\n   dcl varchar(32767) character set utf8 pypgm;\n   dcl double resultCode revision;\n   dcl varchar(100) \"Carrier\";\n   dcl double \"DayofMonth\";\n   dcl varchar(100) \"OriginAirport\";\n   dcl double \"ScheduledElapsedTimeMinutes\";\n   dcl double \"ArrivalHour\";\n   dcl double \"DepatureHour\";\n   dcl varchar(100) \"EM_CLASSIFICATION\";\n   dcl double \"EM_EVENTPROBABILITY\";\n\n   method score(\n   varchar(100) \"Carrier\",\n   double \"DayofMonth\",\n   varchar(100) \"OriginAirport\",\n   double \"ScheduledElapsedTimeMinutes\",\n   double \"ArrivalHour\",\n   double \"DepatureHour\",\n   in_out double resultCode,\n   in_out varchar(100) \"EM_CLASSIFICATION\",\n   in_out double \"EM_EVENTPROBABILITY\");\n\n      resultCode = revision = 0;\n      if null(pm) then do;\n         pm = _new_ pymas();\n         resultCode = pm.useModule('model_exec_43411d83-2e94-4b9e-925d-dd41a3d6aad3', 1);\n         if resultCode then do;\n            resultCode = pm.appendSrcLine('import sys');\n            resultCode = pm.appendSrcLine('sys.path.append(\"/models/resources/viya/e4949fbb-1dfb-43f7-92b3-442f8b968dc7/\")');\n            resultCode = pm.appendSrcLine('import settings_e4949fbb_1dfb_43f7_92b3_442f8b968dc7');\n            resultCode = pm.appendSrcLine('settings_e4949fbb_1dfb_43f7_92b3_442f8b968dc7.pickle_path = \"/models/resources/viya/e4949fbb-1dfb-43f7-92b3-442f8b968dc7/\"');\n            resultCode = pm.appendSrcLine('import score_SKLearn_Logistic_Regression');\n            resultCode = pm.appendSrcLine('def score(Carrier, DayofMonth, OriginAirport, ScheduledElapsedTimeMinutes, ArrivalHour, DepatureHour):');\n            resultCode = pm.appendSrcLine('    \"Output: EM_CLASSIFICATION, EM_EVENTPROBABILITY\"');\n            resultCode = pm.appendSrcLine('    return score_SKLearn_Logistic_Regression.score(Carrier, DayofMonth, OriginAirport, ScheduledElapsedTimeMinutes, ArrivalHour, DepatureHour)');\n\n            revision = pm.publish(pm.getSource(), 'model_exec_43411d83-2e94-4b9e-925d-dd41a3d6aad3');\n            if ( revision \u003c 1 ) then do;\n               logr.log( 'e', 'py.publish() failed.');\n               resultCode = -1;\n               return;\n            end;\n         end;\n      end;\n\n      resultCode = pm.useMethod('score');\n      if resultCode then do;\n         logr.log('E', 'useMethod() failed. resultCode=$s', resultCode);\n         return;\n      end;\n      resultCode = pm.setString('Carrier', Carrier);\n      if resultCode then\n         logr.log('E', 'setString for Carrier failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('DayofMonth', DayofMonth);\n      if resultCode then\n         logr.log('E', 'setDouble for DayofMonth failed.  resultCode=$s', resultCode);\n      resultCode = pm.setString('OriginAirport', OriginAirport);\n      if resultCode then\n         logr.log('E', 'setString for OriginAirport failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('ScheduledElapsedTimeMinutes', ScheduledElapsedTimeMinutes);\n      if resultCode then\n         logr.log('E', 'setDouble for ScheduledElapsedTimeMinutes failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('ArrivalHour', ArrivalHour);\n      if resultCode then\n         logr.log('E', 'setDouble for ArrivalHour failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('DepatureHour', DepatureHour);\n      if resultCode then\n         logr.log('E', 'setDouble for DepatureHour failed.  resultCode=$s', resultCode);\n      resultCode = pm.execute();\n      if (resultCode) then\n         logr.log('E', 'Error: pm.execute failed.  resultCode=$s', resultCode);\n      else do;\n         \"EM_CLASSIFICATION\" = pm.getString('EM_CLASSIFICATION');\n         \"EM_EVENTPROBABILITY\" = pm.getDouble('EM_EVENTPROBABILITY');\n      end;\n   end;\n\n   method run();\n      set SASEP.IN;\n      score(\"Carrier\",\"DayofMonth\",\"OriginAirport\",\"ScheduledElapsedTimeMinutes\",\"ArrivalHour\",\"DepatureHour\", resultCode, \"EM_CLASSIFICATION\", \"EM_EVENTPROBABILITY\");\n   end;\nenddata;\n",
    "sourceURI": "/modelRepository/models/e4949fbb-1dfb-43f7-92b3-442f8b968dc7",
    "projectID": "6e865bd6-82a1-42cf-8d26-8e4d83cf0b93",
    "projectVersionID": "2112a53b-3ebf-4b64-b737-2b6c11b0c4d8",
    "modelID": "e4949fbb-1dfb-43f7-92b3-442f8b968dc7",
    "modelVersionID": "6.0",
    "publishLevel": "model",
    "variableXML": "\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e\n\u003cScore\u003e\n  \u003cTargetList\u003e\u003c/TargetList\u003e\n  \u003cProducer\u003e\n    \u003cName\u003eSAS Model Manager\u003c/Name\u003e\n    \u003cVersion\u003e15.1\u003c/Version\u003e\n  \u003c/Producer\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"Carrier\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"DayofMonth\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"OriginAirport\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"ScheduledElapsedTimeMinutes\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"ArrivalHour\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cInput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"DepatureHour\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Input\u003e\n  \u003cOutput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"EM_CLASSIFICATION\"\u003c/Name\u003e\n      \u003cType\u003echaracter\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Output\u003e\n  \u003cOutput\u003e\n    \u003cVariable\u003e\n      \u003cName\u003e\"EM_EVENTPROBABILITY\"\u003c/Name\u003e\n      \u003cType\u003enumeric\u003c/Type\u003e\n    \u003c/Variable\u003e\n  \u003c/Output\u003e\n\u003c/Score\u003e"
  },
  "properties": {
    "gitFolderPath": "/Python/SKLearn_Logistic_Regression",
    "gitRemotePath": "/Python",
    "gitRepositoryURL": "https://github.com/AMichaelK/SCR-SAS-Explore-2023.git"
  },
  "sourceURI": "/modelRepository/models/e4949fbb-1dfb-43f7-92b3-442f8b968dc7",
  "inputVariables": null,
  "outputVariables": null,
  "component": {},
  "product": {},
  "service": {
    "name": "Model Publish service"
  },
  "baseImage": {}
}