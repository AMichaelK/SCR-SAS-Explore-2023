{"scope":"PUBLIC","source":"data sasep.out;\n   dcl package pymas pm;\n   dcl package logger logr('App.MM.Python.DS2');\n   dcl varchar(32767) character set utf8 pypgm;\n   dcl double resultCode revision;\n   dcl varchar(100) \"Carrier\";\n   dcl double \"DayofMonth\";\n   dcl varchar(100) \"OriginAirport\";\n   dcl double \"ScheduledElapsedTimeMinutes\";\n   dcl double \"ArrivalHour\";\n   dcl double \"DepatureHour\";\n   dcl varchar(100) \"EM_CLASSIFICATION\";\n   dcl double \"EM_EVENTPROBABILITY\";\n\n   method score(\n   varchar(100) \"Carrier\",\n   double \"DayofMonth\",\n   varchar(100) \"OriginAirport\",\n   double \"ScheduledElapsedTimeMinutes\",\n   double \"ArrivalHour\",\n   double \"DepatureHour\",\n   in_out double resultCode,\n   in_out varchar(100) \"EM_CLASSIFICATION\",\n   in_out double \"EM_EVENTPROBABILITY\");\n\n      resultCode = revision = 0;\n      if null(pm) then do;\n         pm = _new_ pymas();\n         resultCode = pm.useModule('model_exec_e53f17e8-809c-42b3-999d-b9222efb44a1', 1);\n         if resultCode then do;\n            resultCode = pm.appendSrcLine('import sys');\n            resultCode = pm.appendSrcLine('sys.path.append(\"/modules/e4949fbb-1dfb-43f7-92b3-442f8b968dc7/\")');\n            resultCode = pm.appendSrcLine('import settings_e4949fbb_1dfb_43f7_92b3_442f8b968dc7');\n            resultCode = pm.appendSrcLine('settings_e4949fbb_1dfb_43f7_92b3_442f8b968dc7.pickle_path = \"/modules/e4949fbb-1dfb-43f7-92b3-442f8b968dc7/\"');\n            resultCode = pm.appendSrcLine('import score_SKLearn_Logistic_Regression');\n            resultCode = pm.appendSrcLine('def score(Carrier, DayofMonth, OriginAirport, ScheduledElapsedTimeMinutes, ArrivalHour, DepatureHour):');\n            resultCode = pm.appendSrcLine('    \"Output: EM_CLASSIFICATION, EM_EVENTPROBABILITY\"');\n            resultCode = pm.appendSrcLine('    return score_SKLearn_Logistic_Regression.score(Carrier, DayofMonth, OriginAirport, ScheduledElapsedTimeMinutes, ArrivalHour, DepatureHour)');\n\n            revision = pm.publish(pm.getSource(), 'model_exec_e53f17e8-809c-42b3-999d-b9222efb44a1');\n            if ( revision \u003c 1 ) then do;\n               logr.log( 'e', 'py.publish() failed.');\n               resultCode = -1;\n               return;\n            end;\n         end;\n      end;\n\n      resultCode = pm.useMethod('score');\n      if resultCode then do;\n         logr.log('E', 'useMethod() failed. resultCode=$s', resultCode);\n         return;\n      end;\n      resultCode = pm.setString('Carrier', Carrier);\n      if resultCode then\n         logr.log('E', 'setString for Carrier failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('DayofMonth', DayofMonth);\n      if resultCode then\n         logr.log('E', 'setDouble for DayofMonth failed.  resultCode=$s', resultCode);\n      resultCode = pm.setString('OriginAirport', OriginAirport);\n      if resultCode then\n         logr.log('E', 'setString for OriginAirport failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('ScheduledElapsedTimeMinutes', ScheduledElapsedTimeMinutes);\n      if resultCode then\n         logr.log('E', 'setDouble for ScheduledElapsedTimeMinutes failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('ArrivalHour', ArrivalHour);\n      if resultCode then\n         logr.log('E', 'setDouble for ArrivalHour failed.  resultCode=$s', resultCode);\n      resultCode = pm.setDouble('DepatureHour', DepatureHour);\n      if resultCode then\n         logr.log('E', 'setDouble for DepatureHour failed.  resultCode=$s', resultCode);\n      resultCode = pm.execute();\n      if (resultCode) then\n         logr.log('E', 'Error: pm.execute failed.  resultCode=$s', resultCode);\n      else do;\n         \"EM_CLASSIFICATION\" = pm.getString('EM_CLASSIFICATION');\n         \"EM_EVENTPROBABILITY\" = pm.getDouble('EM_EVENTPROBABILITY');\n      end;\n   end;\n\n   method run();\n      set SASEP.IN;\n      score(\"Carrier\",\"DayofMonth\",\"OriginAirport\",\"ScheduledElapsedTimeMinutes\",\"ArrivalHour\",\"DepatureHour\", resultCode, \"EM_CLASSIFICATION\", \"EM_EVENTPROBABILITY\");\n   end;\nenddata;\n endpackage;","properties":[{"name":"sourceURI","value":"/modelRepository/models/e4949fbb-1dfb-43f7-92b3-442f8b968dc7"}]}